@{
    ViewData["Title"] = "Résultats des Méthodes de Machine Learning";
}

@{
    string ExtractNumber(object result)
    {
        if (result != null)
        {
            string resultString = result.ToString();
            try
            {
                dynamic jsonResult = Newtonsoft.Json.JsonConvert.DeserializeObject(resultString);
                if (jsonResult != null && jsonResult.accuracy != null)
                {
                    return jsonResult.accuracy.ToString();
                }
            }
            catch (Newtonsoft.Json.JsonReaderException)
            {
                // Handle JSON parse error
                return null;
            }
        }
        return null;
    }

    // Ensure values are strings and handle null values
    string analytiqueResult = ViewBag.Accuracy != null ? ViewBag.Accuracy.ToString().Replace(",", ".") : "0";
    string svmResult = ViewBag.ScoreSVM != null ? ViewBag.ScoreSVM.ToString().Replace(",", ".") : "0";
    string knnResult = ViewBag.ScoreKNN != null ? ViewBag.ScoreKNN.ToString().Replace(",", ".") : "0";
    string randomForestResult = ViewBag.ScoreRF != null ? ViewBag.ScoreRF.ToString().Replace(",", ".") : "0";
}
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <style>
        body {
            background-image: url('https://livetechspot.com/wp-content/uploads/2020/07/Complete-Guide-List-on-How-to-Optimize-E-commerce-Website.jpg');
            background-size: cover;
            background-repeat: no-repeat;
            background-attachment: fixed;
        }
    </style>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js" integrity="sha512-GsLlZN/3F2ErC5ifS5QtgpiJtWd43JWSuIgh7mbzZ8zBps+dvLusV+eNQATqgA/HdeKFVgA5v3S/cIrLF7QnIg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
</head>
<body>
    <h2>@ViewData["Title"]</h2>
    <canvas id="resultChart" width="400" height="200"></canvas>

    <div class="col-md-8">
                <div class="result" id="analizResult">
                    @if (ViewBag.Accuracy != null && ViewBag.ExecutionTime != null)
                    {
                        <h4>Resultat Analytique:</h4>
                        <pre>Accuracy: @ViewBag.Accuracy</pre>
                        <pre>Execution Time: @ViewBag.ExecutionTime</pre>
                        
                    }
                </div>
            </div>

    <div class="col-md-8">
        <div class="result" id=" =" svmResult>
            @if (ViewBag.ScoreSVM != null)
            {
                <h4>Résultats SVM :</h4>
                <p>Score : @ViewBag.ScoreSVM</p>
                <p>Matrice de confusion :</p>
                <table>
                    @foreach (var row in ViewBag.MatriceDeConfusionSVM)
                    {
                        <tr>
                            @foreach (var item in row)
                            {
                                <td>@item</td>
                            }
                        </tr>
                    }
                </table>
                <p>Temps d'exécution : @ViewBag.TempsExecutionSVM</p>
                <p>Détails de classement :</p>
                <table>
                    <tr>
                        <th>Tags</th>
                        <th>Classé dans la boîte</th>
                        <th>Devrait être classé dans la boîte</th>
                    </tr>
                    @foreach (var detail in ViewBag.DetailsClassementSVM)
                    {
                        <tr>
                            <td>@detail.Tags</td>
                            <td>    </td>
                            <td>@detail["Classé dans la boîte"]</td>
                            <td>    </td>
                            <td>@detail["Devrait être classé dans la boite"]</td>
                        </tr>
                    }
                </table>

                <p>Boîte à moustache :</p>
                <img src="@ViewBag.CheminBoxPlotSVM" alt="BoxplotSVM des EPCs" />
            }
            else
            {
                <!-- <p>Aucun résultat disponible pour le SVM.</p>-->
            }
        </div>
    </div>

    <div class="col-md-8">
        <div class="result" id="knnResult">
            @if (ViewBag.ScoreKNN != null)
            {
                <h4>Résultats KNN:</h4>
                <p>Score : @ViewBag.ScoreKNN</p>
                <p>Matrice de confusion :</p>
                <table>
                    @foreach (var row in ViewBag.MatriceDeConfusionKNN)
                    {
                        <tr>
                            @foreach (var item in row)
                            {
                                <td>@item</td>
                            }
                        </tr>
                    }
                </table>
                <p>Temps d'exécution : @ViewBag.TempsExecutionKNN</p>
                <p>Détails de classement :</p>
                <table>
                    <tr>
                        <th>Tags</th>
                        <th>Classé dans la boîte</th>
                        <th>Devrait être classé dans la boîte</th>
                    </tr>
                    @foreach (var detail in ViewBag.DetailsClassementKNN)
                    {
                        <tr>
                            <td>@detail.Tags</td>
                            <td>    </td>
                            <td>@detail["Classé dans la boîte"]</td>
                            <td>    </td>
                            <td>@detail["Devrait être classé dans la boite"]</td>
                        </tr>
                    }
                </table>

                <p>Boîte à moustache :</p>
                <img src="@ViewBag.CheminBoxPlotKNN" alt="BoxplotSVM des EPCs" />

                

            }
            else
            {
                <!-- <p>Aucun résultat disponible pour le SVM.</p>-->
            }
        </div>
    </div>

    <div class="col-md-8">
        <div class="result" id="randomForestResult">
            @if (ViewBag.ScoreRF != null)
            {
                <h4>Résultats Random Forest:</h4>
                <p>Score : @ViewBag.ScoreRF</p>
                <p>Matrice de confusion :</p>
                <table>
                    @foreach (var row in ViewBag.MatriceDeConfusionRF)
                    {
                        <tr>
                            @foreach (var item in row)
                            {
                                <td>@item</td>
                            }
                        </tr>
                    }
                </table>
                <p>Temps d'exécution : @ViewBag.TempsExecutionRF</p>
                <p>Détails de classement :</p>
                <table>
                    <tr>
                        <th>Tags</th>
                        <th>Classé dans la boîte</th>
                        <th>Devrait être classé dans la boîte</th>
                    </tr>
                    @foreach (var detail in ViewBag.DetailsClassementRF)
                    {
                        <tr>
                            <td>@detail.Tags</td>
                            <td>    </td>
                            <td>@detail["Classé dans la boîte"]</td>
                            <td>    </td>
                            <td>@detail["Devrait être classé dans la boite"]</td>
                        </tr>
                    }
                </table>

                <p>Boîte à moustache :</p>
                <img src="@ViewBag.CheminBoxPlotRF" alt="Aucun mauvais classement trouvé." />


            }
            else
            {
                <!-- <p>Aucun résultat disponible pour le SVM.</p>-->
            }
        </div>
    </div>

    <div class="conteneur-bouton">
        <button type="submit" class="bouton-envoyer">Générer le PDF</button>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var ctx = document.getElementById('resultChart').getContext('2d');
            var chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['Analytique', 'SVM', 'KNN', 'Random Forest'],
                    datasets: [{
                        label: 'Précision',
                        data: [
        @analytiqueResult,
        @svmResult,
        @knnResult,
        @randomForestResult
                                                        ],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        });
    </script>

    <script>
        function generatePDF() {
            let element = document.querySelector('body'); // Sélection de l'élément à convertir en PDF
            let opt = {
                margin: 1,
                filename: 'chart.pdf',
                image: { type: 'jpeg', quality: 0.98 },
                html2canvas: { scale: 2 },
                jsPDF: { unit: 'cm', format: 'a4', orientation: 'portrait' }
            };
            html2pdf().set(opt).from(element).save(); // Conversion de l'élément en PDF et téléchargement
        }
    </script>
    <button onclick="generatePDF()" class="btn btn-primary" id="pdfButton">Télécharger le PDF</button>


</body>
</html>